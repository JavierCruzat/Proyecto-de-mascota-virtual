import pygame
from pygame.locals import *

pygame.init()
ventana_x=1024
ventana_y=712

ventana=pygame.display.set_mode((ventana_x,ventana_y))
pygame.display.set_caption("Prototipo")
reloj=pygame.time.Clock()

Fondoimagen=pygame.image.load('Proyecto/imagenes/fondoej.jpg')
pet_image=pygame.image.load("Proyecto/imagenes/mogus3.jpg")

boton_alimento_imag=pygame.image.load("Proyecto/imagenes/mogus.jpg")
boton_alimento_rect=boton_alimento_imag.get_rect(topleft=(800,150))

boton_felicidad_imag=pygame.image.load("Proyecto/imagenes/mogus2.jpg")
boton_felicidad_rect=boton_felicidad_imag.get_rect(topright=(200,120))

fuente = pygame.font.SysFont(None,46) #esto es para la fuente de texto y el 46 el tamaÃ±o. 

#esto es para "definir" los valores que tendra la mascota, en esta version solo sera una para simplificar las tareas
class Pet:
    def __init__(self,x,y):
        self.x = x
        self.y = y
        self.hambre = 100
        self.felicidad = 100
        self.image = pet_image

    def draw(self,surface):
        surface.blit(self.image, (self.x, self.y))

    def alimentar(self):
        self.hambre=min(100,self.hambre+10)

    def jugar(self):
        self.felicidad=min(100,self.felicidad+10)

    def resta_stats(self):  #no sabia que nombre colocarle a la disminucion del hambre y felicidad
        self.hambre=max(0,self.hambre -0.5)  #el 0,5 es un ejemplo de la velocidad a la que disminuye
        self.felicidad=max(0,self.felicidad -0.03)

    def valor_stats(self,surface):#esto de los valores es pa que se vean en pantalla
        texto_hambre=fuente.render(f"Hambre: {round(self.hambre,1)}", True, (255,255,255))
        texto_felicidad=fuente.render(f"Felicidad: {round(self.felicidad,1)}", True, (255,255,255))
        surface.blit(texto_felicidad,(50,50))
        surface.blit(texto_hambre,(50,100))

    #moviemiento de la mascota
    def pos_estandar(self):
        if (self.felicidad>=80 and self.hambre>=80):
            self.x=400
            self.y=356
    def mov_feli(self):
        if self.felicidad<=60:
            self.x=300
            self.y=356
            if self.felicidad<=40:
                self.x=200
                self.y=356
    def mov_hambre(self):
        if self.hambre<=99:
            self.x=600
            self.y=356

pet = Pet(400, 356)

repetir=True
while repetir:

    esta_jugando=True
    while esta_jugando:
        reloj.tick(30)
        for evento in pygame.event.get():
            if evento.type==pygame.QUIT:
                quit()
            if evento.type==pygame.MOUSEBUTTONDOWN:
                if boton_alimento_rect.collidepoint(evento.pos):
                    pet.alimentar()#esto se modifica pa lo que necesites javier 
            if evento.type==pygame.MOUSEBUTTONDOWN:
                if boton_felicidad_rect.collidepoint(evento.pos):
                    pet.jugar()#esto igual pero pa la felicidad

        ventana.blit(Fondoimagen, (0,0))
        pet.draw(ventana)
        pet.valor_stats(ventana)
        pet.resta_stats()
        pet.mov_feli()
        pet.mov_hambre()
        ventana.blit(boton_alimento_imag, boton_alimento_rect.topleft)
        ventana.blit(boton_felicidad_imag,boton_felicidad_rect.topright)
        pygame.display.flip()

pygame.quit()

#estoy cansado jefe
